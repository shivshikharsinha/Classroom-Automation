Here are some suggestions for improving the code:

Remove commented-out code: There is a section of code in the loop function that is commented out. This code is not being used, and it is a good practice to remove unused code to make the code easier to read and maintain.

Use constants instead of hard-coded values: Instead of using hard-coded values for things like pin numbers, network credentials, and Firebase authentication, you can define constants at the beginning of the code and use them throughout the code. This makes it easier to change these values later if needed, and it makes the code easier to read.

Use descriptive variable names: Variable names like led1, led2, and ledData are not very descriptive. Consider using more descriptive names that indicate the purpose of the variable.

Add error handling: The code currently assumes that everything will work as expected. However, there may be situations where the network connection or the Firebase API fails. It's a good practice to add error handling to gracefully handle these situations and provide feedback to the user.

Optimize the code for speed: While increasing the baud rate may help improve the speed of communication, there are other optimizations that can be made to improve the speed of the code. For example, using the millis function instead of delay can allow the code to continue processing while waiting for a delay to expire. Additionally, using more efficient data types, like uint8_t instead of int, can help reduce memory usage and improve performance.